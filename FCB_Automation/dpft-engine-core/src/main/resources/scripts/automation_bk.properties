######################################################################################
# System Config
######################################################################################
Automation.TBL.Process=DPFT_AUTOMATION_PROCESS
Automation.TBL.Variables=DPFT_AUTOMATION_VARS
Automation.TBL.Conditions=DPFT_AUTOMATION_COND
Automation.TPID.ProcessManager=AUTO_MGR

######################################################################################
# Variables definition: Common SQL
######################################################################################
Variables.SQL.CHECK_SCHEDULE_C=SELECT TASKID, NAME, SCHEDULE, CAST(SUBSTRING(OBJECTID,4,10) AS INT) as FLOWCHARTID, \
SUBSTRING(PAYLOAD, CHARINDEX('partition1',PAYLOAD)+11, (CHARINDEX('.ses',PAYLOAD)+4-(CHARINDEX('partition1',PAYLOAD)+11))) as FILENAME \
from BDINMP.dbo.USCH_TASK \
WHERE ((SCHEDULE IS NULL AND CAST(SCHEDULESTART AS DATE) = CAST(GETDATE() AS DATE)) OR \
(SCHEDULEEND IS NOT NULL AND CAST(SCHEDULEEND AS DATE) >= CAST(GETDATE() AS DATE))) \
AND SUBSTRING(NAME,19,1)='C' AND CHARINDEX('\u7D93\u7406\u653E\u884C',PAYLOAD) > 1

Variables.SQL.CHECK_SCHEDULE_GK1=select TASKID, NAME, SCHEDULE, CAST(SUBSTRING(OBJECTID,4,10) AS INT) as FLOWCHARTID, \
SUBSTRING(PAYLOAD, CHARINDEX('partition1',PAYLOAD)+11, (CHARINDEX('.ses',PAYLOAD)+4-(CHARINDEX('partition1',PAYLOAD)+11))) as FILENAME \
from BDINMP.dbo.USCH_TASK \
where  ((SCHEDULE IS NULL AND CAST(SCHEDULESTART AS DATE) = CAST(GETDATE() AS DATE)) OR \
(SCHEDULEEND IS NOT NULL AND CAST(SCHEDULEEND AS DATE) >= CAST(GETDATE() AS DATE))) \
AND SUBSTRING(NAME,19,5)='G1_01'

Variables.SQL.CHECK_SCHEDULE_GK234=select TASKID, NAME, SCHEDULE, CAST(SUBSTRING(OBJECTID,4,10) AS INT) as FLOWCHARTID, \
SUBSTRING(PAYLOAD, CHARINDEX('partition1',PAYLOAD)+11, (CHARINDEX('.ses',PAYLOAD)+4-(CHARINDEX('partition1',PAYLOAD)+11))) as FILENAME \
from BDINMP.dbo.USCH_TASK \
where  ((SCHEDULE IS NULL AND CAST(SCHEDULESTART AS DATE) = CAST(GETDATE() AS DATE)) OR \
(SCHEDULEEND IS NOT NULL AND CAST(SCHEDULEEND AS DATE) >= CAST(GETDATE() AS DATE))) \
AND SUBSTRING(NAME,19,4) IN ('G_01','G_02','G_03')

Variables.SQL.CHECK_SCHEDULE_R=select TASKID, NAME, SCHEDULE, CAST(SUBSTRING(OBJECTID,4,10) AS INT) as FLOWCHARTID, \
SUBSTRING(PAYLOAD, CHARINDEX('partition1',PAYLOAD)+11, (CHARINDEX('.ses',PAYLOAD)+4-(CHARINDEX('partition1',PAYLOAD)+11))) as FILENAME \
from BDINMP.dbo.USCH_TASK \
where  ((SCHEDULE IS NULL AND CAST(SCHEDULESTART AS DATE) = CAST(GETDATE() AS DATE)) OR \
(SCHEDULEEND IS NOT NULL AND CAST(SCHEDULEEND AS DATE) >= CAST(GETDATE() AS DATE))) \
AND SUBSTRING(NAME,19,4)='R'

Variables.SQL.CHECK_CM_USER_ROLE=select a.name as ID, case SUBSTRING(b.name,1,3) \
when 'COB' then '064' \
when 'DPA' then '075' \
when 'IAD' then '066' \
when 'CNB' then '067' \
when 'CRB' then '068' \
when 'PBB' then '072' \
when 'CAD' then '073' \
when 'FMB' then '089' \
when 'INB' then '091' \
when 'DBD' then '056' \
else '056' \
end as DEP \
from BDINMP.dbo.USM_USER a \
join BDINMP.dbo.USM_USER_ROLE_MAP c on a.id = c.USER_ID \
join BDINMP.dbo.USM_ROLE b on c.ROLE_ID = b.ID \
where a.name like '00%' \
and SUBSTRING(b.name,1,3) in ('COB', 'DPA', 'IAD', 'CNB', 'CRB', 'PBB', 'CAD', 'FMB', 'INB', 'DBD') \
group by a.name, SUBSTRING(b.name,1,3)

Variables.SQL.CHECK_CFHRIS=select CFHRIS_EMPLOYEEID as id, SUBSTR(CFHRIS_DEPARTMENTID_L5,2,3) as dep \
from CMETL.CFHRIS_STG where CFHRIS_DEPARTMENTID_L5 like 'H0%'

Variables.SQL.EXECUTE_LOCK_IDS=update BDINMP.dbo.USM_USER set STATUS = 2 where NAME in $(ResetEnv.LOCKIDS)

Variables.SQL.CHECK_UA_CCRUNLOG=SELECT DISTINCT A.FLOWCHARTID, A.RUNID, A.REMOTEUSERNAME, A.LOCALUSERNAME, A.RUNSTATUS, A.RUNBY, A.RUNTYPE, \
                                      CASE WHEN A.RUNSTARTTIME IS NULL THEN \
                                                '' \
                                           ELSE format(A.RUNSTARTTIME,'yyyyMMddHHmmss') \
                                      END AS RUNSTARTTIME, \
                                      CASE WHEN A.RUNENDTIME IS NULL THEN \
                                                '' \
                                           ELSE format(A.RUNENDTIME,'yyyyMMddHHmmss') \
                                      END AS RUNENDTIME, \
                                      CASE WHEN A.RUNSTATUS = 'Run Succeeded' THEN \
                                                'Success' \
                                           WHEN A.RUNSTATUS = 'Run Failed' THEN    \
                                                'Failed' \
                                           WHEN A.RUNSTATUS = 'Inactive' THEN   \
                                                'Failed' \
                                           ELSE 'In Progress' \
                                      END AS CCT_STATUS \
                                 FROM BDINCMP.dbo.UA_CCRUNLOG A \
                                 WHERE A.RUNID > CAST($(MainBatch.MAXRUN_ID) AS INT) \
                                 AND A.FLOWCHARTID IN $(MainBatch.CCTIDS)

Variables.SQL.CHECK_CCT=SELECT DISTINCT B.FLOWCHARTID FROM CMAUTO_AP.CCT B

Variables.SQL.CHECK_RP_FLOWCHART_RUN_STATUS=SELECT DISTINCT A.FLOWCHARTID, A.RUNID, A.REMOTEUSERNAME, A.LOCALUSERNAME, A.RUNSTATUS, A.RUNBY, A.RUNTYPE,\
                                      CASE WHEN A.RUNSTARTTIME IS NULL THEN \
                                                '' \
                                           ELSE format(A.RUNSTARTTIME,'yyyyMMddHHmmss') \
                                      END AS RUNSTARTTIME, \
                                      CASE WHEN A.RUNENDTIME IS NULL THEN \
                                                '' \
                                           ELSE format(A.RUNENDTIME,'yyyyMMddHHmmss') \
                                      END AS RUNENDTIME, \
                                      CASE WHEN A.RUNSTATUS = 'Run Succeeded' THEN \
                                                'Success' \
                                           WHEN A.RUNSTATUS = 'Run Failed' THEN    \
                                                'Failed' \
                                           WHEN A.RUNSTATUS = 'Inactive' THEN   \
                                                'Failed' \
                                           ELSE 'In Progress' \
                                      END AS CCT_STATUS \
                                 FROM BDINCMP.dbo.UA_CCRUNLOG A \
                                 WHERE A.RUNID > CAST($(MainBatch.MAXRUN_ID) AS INT) \
                                 AND A.FLOWCHARTID IN $(RunPerf.RP_CCTIDS)

Variables.SQL.CHECK_TRACK_FLOWCHART_RUN_STATUS=SELECT DISTINCT A.FLOWCHARTID, A.RUNID, A.REMOTEUSERNAME, A.LOCALUSERNAME, A.RUNSTATUS, A.RUNBY, A.RUNTYPE,\
                                      CASE WHEN A.RUNSTARTTIME IS NULL THEN \
                                                '' \
                                           ELSE format(A.RUNSTARTTIME,'yyyyMMddHHmmss') \
                                      END AS RUNSTARTTIME, \
                                      CASE WHEN A.RUNENDTIME IS NULL THEN \
                                                '' \
                                           ELSE format(A.RUNENDTIME,'yyyyMMddHHmmss')  \
                                      END AS RUNENDTIME, \
                                      CASE WHEN A.RUNSTATUS = 'Run Succeeded' THEN \
                                                'Success' \
                                           WHEN A.RUNSTATUS = 'Run Failed' THEN    \
                                                'Failed' \
                                           WHEN A.RUNSTATUS = 'Inactive' THEN   \
                                                'Failed' \
                                           ELSE 'In Progress' \
                                      END AS CCT_STATUS \
                                 FROM BDINCMP.dbo.UA_CCRUNLOG A \
                                 WHERE A.RUNID > CAST($(MainBatch.MAXRUN_ID) AS INT) \
                                 AND A.FLOWCHARTID IN $(RunTrack.R_CCTIDS)

Variables.SQL.SELECT_INTERACT_DIGITAL_CUST=with v1 as ( \
								select E.CampaignCode AS CAMP_CODE, E.Name as CAMPAIGNNAME, CASE WHEN F.AttributeID = '111' then F.StringValue end as OFFR_PROD, CASE WHEN F.AttributeID='34' then F.StringValue end as CHAL_NAME, E.StartDate as CREATE_DT, C.EffectiveDateTime as OFFR_EFFECTIVEDATE, C.ExpirationDateTime as OFFR_EXPIRATIONDATE,B.CellCode as CELL_CODE, B.CellName as CELLNAME, C.TreatmentCode, A.COOKIEID, D.CUST_ID from BDINCMP.dbo.UA_COOKIE_DTLCONTACTHIST A \
								join BDINCMP.dbo.UA_Treatment C on A.TREATMENTINSTID=C.TreatmentInstID \
								join BDINCMP.dbo.UA_TargetCells B on C.CellID=B.CellID \
								join BDINETL.dbo.DA_VISR_CUST_CURRENT D on A.COOKIEID=D.VISITORID \
								join BDINCMP.dbo.UA_Campaign E on C.CampaignID=E.CampaignID \
								join BDINCMP.dbo.UA_OfferHistAttrib F on C.OfferHistoryID=F.OfferHistoryID \
								join BDINCMP.dbo.UA_AttributeDef G on F.AttributeID=G.AttributeID \
								where cast(A.DATEID as varchar)=cast(dateadd(day,-1,getdate()) as date) \
								and G.Name in ('ProductType','UACIInteractionPointName','EffectiveDate','ExpirationDate') \
								group by E.CampaignCode,E.Name,F.StringValue,E.StartDate,B.CellCode,B.CellName,C.TreatmentCode,A.COOKIEID,D.CUST_ID,F.AttributeID,C.EffectiveDateTime,C.ExpirationDateTime), \
								v3 as ( \
								select CAST(GETDATE() AS DATE) as DATA_DT, v1.CUST_ID, v1.CAMP_CODE, v1.CELL_CODE, max(v1.CHAL_NAME) as CHAL_NAME, v1.CREATE_DT, v1.CAMPAIGNNAME, v1.CELLNAME, max(v1.OFFR_PROD) as OFFR_PROD, v1.OFFR_EFFECTIVEDATE, v1.OFFR_EXPIRATIONDATE, v1.TreatmentCode, v1.COOKIEID, 1 as S5_COUNT,NULL as S6_COUNT from v1 \
								group by v1.camp_code,v1.CELL_CODE,v1.TreatmentCode,v1.CREATE_DT,v1.COOKIEID,v1.CUST_ID,v1.CAMPAIGNNAME,v1.CELLNAME,v1.OFFR_EFFECTIVEDATE,v1.OFFR_EXPIRATIONDATE), \
								v5 as ( \
								select E.CampaignCode AS CAMP_CODE, E.Name as CAMPAIGNNAME, CASE WHEN F.AttributeID = '111' then F.StringValue end as OFFR_PROD, CASE WHEN F.AttributeID = '34' then F.StringValue end as CHAL_NAME, E.StartDate as CREATE_DT, C.EffectiveDateTime as OFFR_EFFECTIVEDATE, C.ExpirationDateTime as OFFR_EXPIRATIONDATE, B.CellCode as CELL_CODE, B.CellName as CELLNAME, C.TreatmentCode, A.COOKIEID, D.CUST_ID from BDINCMP.dbo.UA_COOKIE_RESPONSEHISTORY A \
								join BDINCMP.dbo.UA_Treatment C on A.TREATMENTINSTID=C.TreatmentInstID \
								join BDINCMP.dbo.UA_TargetCells B on C.CellID=B.CellID \
								join BDINETL.dbo.DA_VISR_CUST_CURRENT D on A.COOKIEID=D.VISITORID \
								join BDINCMP.dbo.UA_Campaign E on C.CampaignID=E.CampaignID \
								join BDINCMP.dbo.UA_OfferHistAttrib F on C.OfferHistoryID=F.OfferHistoryID \
								join BDINCMP.dbo.UA_AttributeDef G on F.AttributeID=G.AttributeID \
								where cast(A.DATEID as varchar)=cast(dateadd(day,-1,getdate()) as date) \
								and G.Name in ('ProductType','UACIInteractionPointName','EffectiveDate','ExpirationDate') \
								group by E.CampaignCode,E.Name,F.StringValue,E.StartDate,B.CellCode,B.CellName,C.TreatmentCode,A.COOKIEID,D.CUST_ID,F.AttributeID,C.EffectiveDateTime,C.ExpirationDateTime), \
								v7 as ( \
								select CAST(GETDATE() AS DATE) as DATA_DT,v5.CUST_ID,v5.CAMP_CODE,v5.CELL_CODE,max(v5.CHAL_NAME) as CHAL_NAME,v5.CREATE_DT,v5.CAMPAIGNNAME,v5.CELLNAME,max(v5.OFFR_PROD) as OFFR_PROD,v5.OFFR_EFFECTIVEDATE,v5.OFFR_EXPIRATIONDATE,v5.TreatmentCode,v5.COOKIEID,1 as S5_COUNT,1 as S6_COUNT from v5 \
								group by v5.camp_code,v5.CELL_CODE,v5.TreatmentCode,v5.CREATE_DT,v5.COOKIEID,v5.CUST_ID,v5.CAMPAIGNNAME,v5.CELLNAME,v5.OFFR_EFFECTIVEDATE,v5.OFFR_EXPIRATIONDATE \
								) \
								select v3.DATA_DT,v3.CUST_ID,v3.CAMP_CODE,v3.CELL_CODE, v3.CHAL_NAME, v3.CREATE_DT, v3.CAMPAIGNNAME,v3.CELLNAME,v3.OFFR_PROD,v3.OFFR_EFFECTIVEDATE,v3.OFFR_EXPIRATIONDATE,v3.TreatmentCode as TREATMENT_CODE,v3.COOKIEID,'CUSTOMER' as AUDIENCE_LEVEL,v3.S5_COUNT,case when v7.S6_COUNT is null then 0 else 1 end as S6_COUNT from v7 \
								right join v3 on (v3.COOKIEID=v7.COOKIEID and v3.CAMP_CODE=v7.CAMP_CODE and v3.CELL_CODE=v7.CELL_CODE and v3.CHAL_NAME=v7.CHAL_NAME and v3.CREATE_DT = v7.CREATE_DT and v3.TreatmentCode=v7.TreatmentCode) where v3.CHAL_NAME is not null

Variables.SQL.SELECT_INTERACT_DIGITAL_COOKIE=with v2 as ( \
								select E.CampaignCode AS CAMP_CODE, E.Name as CAMPAIGNNAME, CASE WHEN F.AttributeID = '111' then F.StringValue end as OFFR_PROD, CASE WHEN F.AttributeID = '34' then F.StringValue end as CHAL_NAME, E.StartDate as CREATE_DT, C.EffectiveDateTime as OFFR_EFFECTIVEDATE, C.ExpirationDateTime as OFFR_EXPIRATIONDATE, B.CellCode as CELL_CODE, B.CellName as CELLNAME, C.TreatmentCode, A.COOKIEID from BDINCMP.dbo.UA_COOKIE_DTLCONTACTHIST A \
								join BDINCMP.dbo.UA_Treatment C on A.TREATMENTINSTID = C.TreatmentInstID \
								join BDINCMP.dbo.UA_TargetCells B on C.CellID = B.CellID \
								join BDINCMP.dbo.UA_Campaign E on C.CampaignID = E.CampaignID \
								join BDINCMP.dbo.UA_OfferHistAttrib F on C.OfferHistoryID = F.OfferHistoryID \
								join BDINCMP.dbo.UA_AttributeDef G on F.AttributeID = G.AttributeID \
								where cast(A.DATEID as varchar) = cast(dateadd(day,-1,getdate()) as date) \
								and G.Name in ('ProductType','UACIInteractionPointName','EffectiveDate','ExpirationDate') \
								group by E.CampaignCode, E.Name, F.StringValue, E.StartDate, B.CellCode, B.CellName, C.TreatmentCode, A.COOKIEID, F.AttributeID, C.EffectiveDateTime, C.ExpirationDateTime \
								), \
								v3 as ( \
								select CAST(GETDATE() AS DATE) as DATA_DT, NULL as CUST_ID, v2.CAMP_CODE, v2.CELL_CODE, max(v2.CHAL_NAME) as CHAL_NAME, v2.CREATE_DT, v2.CAMPAIGNNAME, v2.CELLNAME, max(v2.OFFR_PROD) as OFFR_PROD, v2.OFFR_EFFECTIVEDATE, v2.OFFR_EXPIRATIONDATE, v2.TreatmentCode, v2.COOKIEID, 1 as S5_COUNT, NULL as S6_COUNT from v2 \
								group by v2.camp_code, v2.CELL_CODE, v2.TreatmentCode, v2.CREATE_DT, v2.COOKIEID, v2.CAMPAIGNNAME, v2.CELLNAME, v2.OFFR_EFFECTIVEDATE, v2.OFFR_EXPIRATIONDATE \
								), \
								v6 as ( \
								select E.CampaignCode AS CAMP_CODE, E.Name as CAMPAIGNNAME, CASE WHEN F.AttributeID = '111' then F.StringValue end as OFFR_PROD, CASE WHEN F.AttributeID = '34' then F.StringValue end as CHAL_NAME, E.StartDate as CREATE_DT, C.EffectiveDateTime as OFFR_EFFECTIVEDATE, C.ExpirationDateTime as OFFR_EXPIRATIONDATE, B.CellCode as CELL_CODE, B.CellName as CELLNAME, C.TreatmentCode, A.COOKIEID from BDINCMP.dbo.UA_COOKIE_RESPONSEHISTORY A \
								join BDINCMP.dbo.UA_Treatment C on A.TREATMENTINSTID = C.TreatmentInstID \
								join BDINCMP.dbo.UA_TargetCells B on C.CellID = B.CellID \
								join BDINCMP.dbo.UA_Campaign E on C.CampaignID = E.CampaignID \
								join BDINCMP.dbo.UA_OfferHistAttrib F on C.OfferHistoryID = F.OfferHistoryID \
								join BDINCMP.dbo.UA_AttributeDef G on F.AttributeID = G.AttributeID \
								where cast(A.DATEID as varchar) = cast(dateadd(day,-1,getdate()) as date) \
								and G.Name in ('ProductType','UACIInteractionPointName','EffectiveDate','ExpirationDate') \
								group by E.CampaignCode, E.Name, F.StringValue, E.StartDate, B.CellCode, B.CellName, C.TreatmentCode, A.COOKIEID, F.AttributeID, C.EffectiveDateTime, C.ExpirationDateTime \
								), \
								v7 as ( \
								select CAST(GETDATE() AS DATE) as DATA_DT, NULL as CUST_ID, v6.CAMP_CODE, v6.CELL_CODE, max(v6.CHAL_NAME) as CHAL_NAME, v6.CREATE_DT, v6.CAMPAIGNNAME, v6.CELLNAME, max(v6.OFFR_PROD) as OFFR_PROD, v6.OFFR_EFFECTIVEDATE, v6.OFFR_EXPIRATIONDATE, v6.TreatmentCode, v6.COOKIEID, 1 as S5_COUNT, 1 as S6_COUNT from v6 \
								group by v6.camp_code, v6.CELL_CODE, v6.TreatmentCode, v6.CREATE_DT, v6.COOKIEID, v6.CAMPAIGNNAME, v6.CELLNAME, v6.OFFR_EFFECTIVEDATE, v6.OFFR_EXPIRATIONDATE \
								) \
								select v3.DATA_DT, v3.COOKIEID as CUST_ID, v3.CAMP_CODE, v3.CELL_CODE, v3.CHAL_NAME, v3.CREATE_DT, v3.CAMPAIGNNAME, v3.CELLNAME, v3.OFFR_PROD, v3.OFFR_EFFECTIVEDATE, v3.OFFR_EXPIRATIONDATE, v3.TreatmentCode as TREATMENT_CODE, v3.COOKIEID, 'COOKIE' as AUDIENCE_LEVEL, v3.S5_COUNT, case when v7.S6_COUNT is null then 0 else 1 end as S6_COUNT from v7 \
								right join v3 on (v3.COOKIEID = v7.COOKIEID and v3.CAMP_CODE = v7.CAMP_CODE and v3.CELL_CODE = v7.CELL_CODE and v3.CHAL_NAME = v7.CHAL_NAME and v3.CREATE_DT = v7.CREATE_DT and v3.TreatmentCode = v7.TreatmentCode) where v3.CHAL_NAME is not null

Variables.SQL.SELECT_INTERACT_AGENT=with v1 as ( \
								select E.CampaignCode AS CAMP_CODE, E.Name as CAMPAIGNNAME, CASE WHEN F.AttributeID = '111' then F.StringValue end as OFFR_PROD, CASE WHEN F.AttributeID = '34' then F.StringValue end as CHAL_NAME, E.StartDate as CREATE_DT, C.EffectiveDateTime as OFFR_EFFECTIVEDATE, C.ExpirationDateTime as OFFR_EXPIRATIONDATE, B.CellCode as CELL_CODE, B.CellName as CELLNAME, C.TreatmentCode, A.CUST_ID from BDINCMP.dbo.UA_CUST_DTLCONTACTHIST A \
								join BDINCMP.dbo.UA_Treatment C on A.TREATMENTINSTID = C.TreatmentInstID \
								join BDINCMP.dbo.UA_TargetCells B on C.CellID = B.CellID \
								join BDINCMP.dbo.UA_Campaign E on C.CampaignID = E.CampaignID \
								join BDINCMP.dbo.UA_OfferHistAttrib F on C.OfferHistoryID = F.OfferHistoryID \
								join BDINCMP.dbo.UA_AttributeDef G on F.AttributeID = G.AttributeID \
								where cast(A.DATEID as varchar) = cast(dateadd(day,-1,getdate()) as date) \
								and G.Name in ('ProductType','UACIInteractionPointName','EffectiveDate','ExpirationDate') \
								group by E.CampaignCode, E.Name, F.StringValue, E.StartDate, B.CellCode, B.CellName, C.TreatmentCode, A.CUST_ID, F.AttributeID, C.EffectiveDateTime, C.ExpirationDateTime \
								), \
								v2 as ( \
								select CAST(GETDATE() AS DATE) as DATA_DT, v1.CUST_ID, v1.CAMP_CODE, v1.CELL_CODE, max(v1.CHAL_NAME) as CHAL_NAME, v1.CREATE_DT, v1.CAMPAIGNNAME, v1.CELLNAME, max(v1.OFFR_PROD) as OFFR_PROD, v1.OFFR_EFFECTIVEDATE, v1.OFFR_EXPIRATIONDATE, v1.TreatmentCode, 1 as S5_COUNT, NULL as S6_COUNT from v1 \
								group by v1.camp_code, v1.CELL_CODE, v1.TreatmentCode, v1.CREATE_DT, v1.CUST_ID, v1.CAMPAIGNNAME, v1.CELLNAME, v1.OFFR_EFFECTIVEDATE, v1.OFFR_EXPIRATIONDATE \
								), \
								v3 as ( \
								select E.CampaignCode AS CAMP_CODE, E.Name as CAMPAIGNNAME, CASE WHEN F.AttributeID = '111' then F.StringValue end as OFFR_PROD, CASE WHEN F.AttributeID = '34' then F.StringValue end as CHAL_NAME, E.StartDate as CREATE_DT, C.EffectiveDateTime as OFFR_EFFECTIVEDATE, C.ExpirationDateTime as OFFR_EXPIRATIONDATE, B.CellCode as CELL_CODE, B.CellName as CELLNAME, C.TreatmentCode, A.CUST_ID from BDINCMP.dbo.UA_CUST_RESPONSEHISTORY A \
								join BDINCMP.dbo.UA_Treatment C on A.TREATMENTINSTID = C.TreatmentInstID \
								join BDINCMP.dbo.UA_TargetCells B on C.CellID = B.CellID \
								join BDINCMP.dbo.UA_Campaign E on C.CampaignID = E.CampaignID \
								join BDINCMP.dbo.UA_OfferHistAttrib F on C.OfferHistoryID = F.OfferHistoryID \
								join BDINCMP.dbo.UA_AttributeDef G on F.AttributeID = G.AttributeID \
								where cast(A.DATEID as varchar) = cast(dateadd(day,-1,getdate()) as date) \
								and G.Name in ('ProductType','UACIInteractionPointName','EffectiveDate','ExpirationDate') \
								group by E.CampaignCode, E.Name, F.StringValue, E.StartDate, B.CellCode, B.CellName, C.TreatmentCode, A.CUST_ID, F.AttributeID, C.EffectiveDateTime, C.ExpirationDateTime \
								), \
								v4 as ( \
								select CAST(GETDATE() AS DATE) as DATA_DT, v3.CUST_ID, v3.CAMP_CODE, v3.CELL_CODE, max(v3.CHAL_NAME) as CHAL_NAME, v3.CREATE_DT, v3.CAMPAIGNNAME, v3.CELLNAME, max(v3.OFFR_PROD) as OFFR_PROD, v3.OFFR_EFFECTIVEDATE, v3.OFFR_EXPIRATIONDATE, v3.TreatmentCode, 1 as S5_COUNT, NULL as S6_COUNT from v3 \
								group by v3.camp_code, v3.CELL_CODE, v3.TreatmentCode, v3.CREATE_DT, v3.CUST_ID, v3.CAMPAIGNNAME, v3.CELLNAME, v3.OFFR_EFFECTIVEDATE, v3.OFFR_EXPIRATIONDATE \
								) \
								select v2.DATA_DT, v2.CUST_ID, v2.CAMP_CODE, v2.CELL_CODE, v2.CHAL_NAME, v2.CREATE_DT, v2.CAMPAIGNNAME, v2.CELLNAME, v2.OFFR_PROD, v2.OFFR_EFFECTIVEDATE, v2.OFFR_EXPIRATIONDATE, v2.TreatmentCode as TREATMENT_CODE, NULL as COOKIEID, 'CUSTOMER' as AUDIENCE_LEVEL, v2.S5_COUNT, case when v4.S6_COUNT is null then 0 else 1 end as S6_COUNT from v4 \
								right join v2 on (v2.CUST_ID = v4.CUST_ID and v2.TreatmentCode = v4.TreatmentCode) where v2.CHAL_NAME is not null


######################################################################################
# Variables definition: Command
######################################################################################
Variables.CMD.RUN_LEADS=D:\\IBM\\EMM\\Campaign\\bin\\unica_svradm.exe -y $(USERID) -z $(PASSWORD) -x \"run -u $(USERID) -h partition1 -m -p \\\"<FILENAME>\\\"\"
Variables.CMD.USERID=asm_admin
Variables.CMD.PASSWORD=asm123@test
Variables.CMD.STOP_ACTIVE_FLOWCHART=D:\\IBM\\EMM\\Campaign\\bin\\unica_svradm.exe -y $(USERID) -z $(PASSWORD) -x \"stop -f -a\"
Variables.CMD.KILL_UNICA_TASK=D:\\IBM\\EMM\\Campaign\\bin\\stopServer.bat
Variables.CMD.STOP_WAS=D:\\IBM\\WebSphere\\AppServer\\profiles\\AppSrv01\\bin\\stopServer.bat server1 -user wasadmin -password was123@test
Variables.CMD.START_WAS=D:\\IBM\\WebSphere\\AppServer\\profiles\\AppSrv01\\bin\\startServer.bat server1
Variables.CMD.START_CMP_SERVER=D:\\IBM\\EMM\\Campaign\\bin\\cmpServer.bat
Variables.CMD.RM_PRT1_FTP_FILES=cmd.exe /C del /F /Q /S D:\\IBM\\EMM\\Campaign\\partitions\\partition1\\ftp\\*
Variables.CMD.PERF_S1S6=D:\\IBM\\DPFT_Runtime_dev\\resources\\PERF_S1S6.bat
Variables.CMD.PERF_INTERACT_TP2_TO_TP1=D:\\IBM\\DPFT_Runtime_dev\\resources\\PERF_INTERACT_TP2_TO_TP1.bat
Variables.CMD.PERF_SUMMARY=D:\\IBM\\DPFT_Runtime_dev\\resources\\PERF_SUMMARY.bat
Variables.CMD.CMAUTOAP_PWD:decryptPwd;41Hb3UweJop2VmoyPq9djDv6xAWF48JA
Variables.CMD.PRP_08_CL01=D:\\IBM\\DPFT_Runtime_Dev\\resources\\PRP\\PGM\\08_CL01.bat $(CMAUTOAP_PWD)
Variables.CMD.LOG_PERSONAL_INFO_ACCESS=D:\\IBM\\DPFT_Runtime_Dev\\resources\\LOG_PERSONAL_INFO_ACCESS.bat $(CMAUTOAP_PWD)

######################################################################################
# Variables definition: Resetting Environment
######################################################################################
Variables.ResetEnv.CM_USER_ROLE:loadSQL;BDINMP#$(SQL.CHECK_CM_USER_ROLE)
Variables.ResetEnv.CFHRIS:loadSQL;sys#$(SQL.CHECK_CFHRIS)
Variables.ResetEnv.LOCKIDS:buildLOCKids;$(CM_USER_ROLE)#$(CFHRIS)


######################################################################################
# Process definition: Resetting Environment
######################################################################################
Process.ResetEnv.0.\u6BCF\u65E5\u74B0\u5883\u521D\u59CB\u5316:ConditionMatch.STB;1
#Process.ResetEnv.1.\u505C\u6B62\u6240\u6709Active\u7684Flowchart:Execute.CMD;$(CMD.STOP_ACTIVE_FLOWCHART)
#Process.ResetEnv.1.\u7528Macro\u89E3\u5BC6\u547C\u53EBBAT:Execute.CMD;$(CMD.PRP_08_CL01)
#Process.ResetEnv.1.\u66F4\u65B0\u4E0D\u7B26\u5408\u90E8\u9580\u7684CM\u4F7F\u7528\u8005:executeSQL.VAR;BDINMP#$(SQL.EXECUTE_LOCK_IDS)
#Process.ResetEnv.2.\u505C\u6B62Unica\ \u76E3\u807D\u7A0B\u5E8F:Execute.CMD;$(CMD.KILL_UNICA_TASK)
#Process.ResetEnv.3.\u505C\u6B62Unica\ Web\ Application:Execute.CMD;WebServer#$(CMD.STOP_WAS)
#Process.ResetEnv.4.\u555F\u52D5Unica\ Web\ Application:Execute.CMD;WebServer#$(CMD.START_WAS)
#Process.ResetEnv.3.\u555F\u52D5Unica\ \u76E3\u807D\u7A0B\u5E8F:Invoke.CMD;$(CMD.START_CMP_SERVER)
#Process.ResetEnv.2.\u4FDD\u5B58\u6628\u65E5\u540D\u55AE\u7522\u51FA\u6B77\u7A0B:Archive.AUTO;sys#H_INBOUND#HIS_INBOUND
#Process.ResetEnv.3.\u4FDD\u5B58Flowchart\u57F7\u884C\u6B77\u7A0B:Archive.AUTO;sys#CCT#CCT_HIS
#Process.ResetEnv.4.\u6E05\u9664APP\u63A8\u64AD\u901A\u8DEF\u540D\u55AE\u8CC7\u6599:Truncate.AUTO;sys#D_APP
#Process.ResetEnv.5.\u6E05\u9664\u4FE1\u7528\u5361\u7C21\u8A0A\u901A\u8DEF\u540D\u55AE\u8CC7\u6599:Truncate.AUTO;sys#D_CSM
#Process.ResetEnv.6.\u6E05\u9664\u96FB\u92B7\u7CFB\u7D71\u540D\u55AE\u8CC7\u6599:Truncate.AUTO;sys#D_CTI
#Process.ResetEnv.7.\u6E05\u9664EDM\u901A\u8DEF\u540D\u55AE\u8CC7\u6599:Truncate.AUTO;sys#D_EDM
#Process.ResetEnv.8.\u6E05\u9664\u7B2Ce\u6578\u901F\u8CB8\u901A\u8DEF\u540D\u55AE\u8CC7\u6599:Truncate.AUTO;sys#D_EFL
#Process.ResetEnv.9.\u6E05\u9664Line\u63A8\u64AD\u901A\u8DEF\u540D\u55AE\u8CC7\u6599:Truncate.AUTO;sys#D_LIN
#Process.ResetEnv.10.\u6E05\u9664iMVP\u901A\u8DEF\u540D\u55AE\u8CC7\u6599:Truncate.AUTO;sys#D_MVP
#Process.ResetEnv.11.\u6E05\u9664\u820AEDM\u901A\u8DEF\u540D\u55AE\u8CC7\u6599:Truncate.AUTO;sys#D_OEM
#Process.ResetEnv.12.\u6E05\u9664\u9280\u884C\u7C21\u8A0A\u901A\u8DEF\u540D\u55AE\u8CC7\u6599:Truncate.AUTO;sys#D_SMS
#Process.ResetEnv.13.\u6E05\u9664Weba\u901A\u8DEF\u540D\u55AE\u8CC7\u6599:Truncate.AUTO;sys#D_WBA
#Process.ResetEnv.14.\u6E05\u9664\u500B\u7DB2\u512A\u60E0\u5C08\u5340\u901A\u8DEF\u540D\u55AE\u8CC7\u6599:Truncate.AUTO;sys#D_MBA
#Process.ResetEnv.19.\u6E05\u9664\u540D\u55AE\u4E0B\u8F09\u901A\u8DEF\u540D\u55AE\u8CC7\u6599:Truncate.AUTO;sys#D_DMD

######################################################################################
# Condition definition: Resetting Environment
######################################################################################
Conditions.ResetEnv.1:isTimeAfter;00:30

######################################################################################
# Variables definition: Logging Personal Info Access
######################################################################################


######################################################################################
# Process definition: Logging Personal Info Access
######################################################################################
Process.LogPI.0.\u8A18\u9304\u524D\u4E00\u65E5\u500B\u8CC7\u63A5\u89F8\u7D00\u9304:ConditionMatch.STB;1
Process.LogPI.1.\u57F7\u884C\u500B\u8CC7\u63A5\u89F8Log\u7D00\u9304:Execute.CMD;$(CMD.LOG_PERSONAL_INFO_ACCESS)

######################################################################################
# Condition definition: Logging Personal Info Access
######################################################################################
Conditions.LogPI.1:isTimeAfter;00:30

######################################################################################
# Variables definition: MainBatch
######################################################################################
# Variables.MainBatch.ETLFCT_COUNT:loadSQL;RS.COUNT#MKTDM#SELECT COUNT(*) AS COUNT FROM ETLFCT WHERE RUN_STS NOT IN ('F','E')
Variables.MainBatch.USCH_TASK_C:loadSQL;BDINMP#$(SQL.CHECK_SCHEDULE_C)
Variables.MainBatch.USCH_TASK_GK1:loadSQL;BDINMP#$(SQL.CHECK_SCHEDULE_GK1)
Variables.MainBatch.USCH_TASK_GK234:loadSQL;BDINMP#$(SQL.CHECK_SCHEDULE_GK234)
Variables.MainBatch.MAXRUN_ID:loadSQL;RS.MAXRUNID#BDINCMP#SELECT ISNULL(MAX(RUNID),0) AS MAXRUNID FROM BDINCMP.dbo.UA_CCRUNLOG
Variables.MainBatch.LOG_FILE:D:\\IBM\\DPFT_Runtime_dev\\log\\RunFlowChart
# Variables.MainBatch.CCT_RESULT:loadSQL;sys#$(SQL.CHECK_FLOWCHART_RUN_STATUS)
Variables.MainBatch.CCT_RESULT:loadSQL;BDINCMP#$(SQL.CHECK_UA_CCRUNLOG)
Variables.MainBatch.CCT_FLOWCHART_IDS:loadSQL;sys#$(SQL.CHECK_CCT)
Variables.MainBatch.CCTIDS:buildCCTids;$(CCT_FLOWCHART_IDS)
Variables.MainBatch.INBOUND_UNFIN_COUNT:loadSQL;RS.COUNT#sys#SELECT COUNT(*) AS COUNT FROM CMAUTO_AP.H_INBOUND WHERE GK_FLG='Y' AND PROCESS_STATUS NOT IN ('C','E')
Variables.MainBatch.INBOUND_RUNNER:loadTaskRunner;DPFT02#com.ibm.dpft.engine.core.taskplan.DPFTDataInboundWatcher
Variables.MainBatch.OUTBOUND_RUNNER:loadTaskRunner;DPFT03#com.ibm.dpft.engine.core.taskplan.DPFTDataOutboundWatcher

######################################################################################
# Process definition: MainBatch
######################################################################################
Process.MainBatch.0.\u57F7\u884C\u6BCF\u65E5\u884C\u92B7\u6392\u7A0B:ConditionMatch.STB;1
Process.MainBatch.1.\u9078\u64C7\u7576\u65E5\u61C9\u57F7\u884CG1\u6392\u7A0BFlowchart:SelectRunnable.AUTO;$(USCH_TASK_GK1)#G1
#Process.MainBatch.2.\u66AB\u5B58\u7CFB\u7D71\u7576\u524DMAX\ Run\ ID:Cache.VAR;MAXRUN_ID#$(MAXRUN_ID)
#Process.MainBatch.3.\u57F7\u884CGK1\ Flowchart:RunFlowChart.AUTO;$(CMD.RUN_LEADS)#G1#$(LOG_FILE)#Y#Y
#Process.MainBatch.4.\u6AA2\u67E5GK1\u662F\u5426\u5B8C\u6210:isFlowChartFinished.AUTO;$(CCT_RESULT)#G1
#Process.MainBatch.1.\u9078\u64C7\u7576\u65E5\u61C9\u57F7\u884C\u884C\u92B7\u6D3B\u52D5\u6392\u7A0BFlowchart:SelectRunnable.AUTO;$(USCH_TASK_C)#C
#Process.MainBatch.2.\u66AB\u5B58\u7CFB\u7D71\u7576\u524DMAX\ Run\ ID:Cache.VAR;MAXRUN_ID#$(MAXRUN_ID)
#Process.MainBatch.3.\u57F7\u884C\u5404\u901A\u8DEF\u884C\u92B7\u6D3B\u52D5Flowchart:RunFlowChart.AUTO;$(CMD.RUN_LEADS)#C#$(LOG_FILE)#N#N
#Process.MainBatch.4.\u6AA2\u67E5\u5404\u901A\u8DEF\u884C\u92B7\u6D3B\u52D5Flowchart\u662F\u5426\u5B8C\u6210:isFlowChartFinished.AUTO;$(CCT_RESULT)#C
#Process.MainBatch.5.\u9078\u64C7\u7576\u65E5\u61C9\u57F7\u884CG234\u6392\u7A0B:SelectRunnable.AUTO;$(USCH_TASK_GK234)#G
#Process.MainBatch.6.\u66AB\u5B58\u7CFB\u7D71\u7576\u524DMAX\ Run\ ID:Cache.VAR;MAXRUN_ID#$(MAXRUN_ID)
#Process.MainBatch.7.\u57F7\u884CGK234\ Flowchart:RunFlowChart.AUTO;$(CMD.RUN_LEADS)#G#$(LOG_FILE)#Y#Y
#Process.MainBatch.8.\u6AA2\u67E5GK234\u662F\u5426\u5B8C\u6210:isFlowChartFinished.AUTO;$(CCT_RESULT)#G
#Process.MainBatch.9.\u505C\u6B62\u9032\u884C\u4E2D\u7684\u6D41\u7A0B\u5716:Execute.CMD;$(CMD.STOP_ACTIVE_FLOWCHART)
#Process.MainBatch.14.\u958B\u59CB\u5404\u901A\u8DEF\u540D\u55AE\u8CC7\u6599\u4E32\u63A5\u7A0B\u5E8F:Run.AUTO;$(INBOUND_RUNNER)
#Process.MainBatch.15.\u958B\u59CB\u5404\u901A\u8DEF\u51FA\u6A94\u7A0B\u5E8F:Run.AUTO;$(OUTBOUND_RUNNER)
#Process.MainBatch.16.\u6AA2\u67E5\u5404\u901A\u8DEF\u540D\u55AE\u8CC7\u6599\u4E32\u63A5\u7A0B\u5E8F\u662F\u5426\u5B8C\u6210:ConditionMatch.STB;2

######################################################################################
# Condition definition: MainBatch
######################################################################################
# Conditions.MainBatch.1:isProcessFinished;CheckRes
Conditions.MainBatch.1:isProcessFinished;ResetEnv
# Conditions.MainBatch.2:$(ETLFCT_COUNT) == 0
# Conditions.MainBatch.3:isTimeAfter;10:00
Conditions.MainBatch.2:$(INBOUND_UNFIN_COUNT) == 0

######################################################################################
# Variables definition: RunPerf
######################################################################################
Variables.RunPerf.RP_INTERACT_DIGITAL_CUST:loadSQL;BDINCMP#$(SQL.SELECT_INTERACT_DIGITAL_CUST)
Variables.RunPerf.RP_INTERACT_DIGITAL_COOKIE:loadSQL;BDINCMP#$(SQL.SELECT_INTERACT_DIGITAL_COOKIE)
Variables.RunPerf.RP_INTERACT_AGENT:loadSQL;BDINCMP#$(SQL.SELECT_INTERACT_AGENT)

######################################################################################
# Process definition: RunPerf
######################################################################################
#Process.RunPerf.0.\u57F7\u884C\u7576\u65E5\u6210\u6548\ Flowchart:ConditionMatch.STB;1
#Process.RunPerf.1.\u57F7\u884CS1_S6\u8A08\u7B97:Execute.CMD;$(CMD.PERF_S1S6)
#Process.RunPerf.2.\u6E05\u7A7AS1_TP2\u8CC7\u6599:Truncate.AUTO;sys#S1_TP2
#Process.RunPerf.3.\u8A08\u7B97Interact\ DigitalChannel\ CUSTOMER\u6210\u6548:insertInteractPerf.AUTO;$(RP_INTERACT_DIGITAL_CUST)
#Process.RunPerf.4.\u5C07Interact\u6210\u6548\u642C\u79FB\u5230S1_TP1:Execute.CMD;$(CMD.PERF_INTERACT_TP2_TO_TP1)
#Process.RunPerf.5.\u6E05\u7A7AS1_TP2\u8CC7\u6599:Truncate.AUTO;sys#S1_TP2
#Process.RunPerf.6.\u8A08\u7B97Interact\ DigitalChannel\ COOKIE\u6210\u6548:insertInteractPerf.AUTO;$(RP_INTERACT_DIGITAL_COOKIE)
#Process.RunPerf.7.\u5C07Interact\u6210\u6548\u642C\u79FB\u5230S1_TP1:Execute.CMD;$(CMD.PERF_INTERACT_TP2_TO_TP1)
#Process.RunPerf.8.\u6E05\u7A7AS1_TP2\u8CC7\u6599:Truncate.AUTO;sys#S1_TP2
#Process.RunPerf.9.\u8A08\u7B97Interact\ AgentChannel\u6210\u6548:insertInteractPerf.AUTO;$(RP_INTERACT_AGENT)
#Process.RunPerf.10.\u5C07Interact\u6210\u6548\u642C\u79FB\u5230S1_TP1:Execute.CMD;$(CMD.PERF_INTERACT_TP2_TO_TP1)
#Process.RunPerf.4.\u57F7\u884C\u7576\u65E5\u6210\u6548:Execute.CMD;$(CMD.PERF_S7S11)
#Process.RunPerf.11.\u57F7\u884C\u7576\u65E5\u6210\u6548:Execute.CMD;$(CMD.PERF_SUMMARY)

######################################################################################
# Condition definition: RunPerf
######################################################################################
Conditions.RunPerf.1:isTimeAfter;01:00

######################################################################################
# Variables definition: DailyRunner
######################################################################################
Variables.DailyRunner.DAY_OBND_RUNNER:loadTaskRunner;DAY_OBND_RUNNER#com.ibm.dpft.engine.core.taskplan.DPFTDataOutboundPeriodicWatcher
Variables.DailyRunner.DAY_FTP_RUNNER:loadTaskRunner;DAY_FTP_RUNNER#com.ibm.dpft.engine.core.taskplan.DPFTResRemoteFileWatcher
Variables.DailyRunner.DAY_RES_RUNNER:loadTaskRunner;DAY_RES_RUNNER#com.ibm.dpft.engine.core.taskplan.DPFTResLocalFileWatcher
Variables.DailyRunner.TRGTIME_DAY_COUNT:loadSQL;RS.COUNT#sys#SELECT COUNT(*) AS COUNT FROM CMAUTO_AP.DPFT_OBND_TP_DEF WHERE TRG_TIME IS NOT NULL AND ACTIVE=1 AND FREQUENCY='DAY'
Variables.DailyRunner.TRGTIME_DAY_UPT_COUNT:loadSQL;RS.COUNT#sys#SELECT COUNT(*) AS COUNT FROM CMAUTO_AP.DPFT_OBND_TP_DEF WHERE LAST_ACTIVE_TIME LIKE TO_CHAR(CURRENT_DATE, 'YYYYMMDD') || '%' AND ACTIVE=1 AND FREQUENCY='DAY'

######################################################################################
# Process definition: DailyRunner
######################################################################################
Process.DailyRunner.0.\u6BCF\u65E5\u55AE\u6A94\u540D\u55AE\u51FA\u6A94:ConditionMatch.STB;0
#Process.DailyRunner.1.\u66AB\u5B58\u65E5\u6A94Active\u7B46\u6578:Cache.VAR;TRGTIME_DAY_COUNT#$(TRGTIME_DAY_COUNT)
#Process.DailyRunner.2.\u57F7\u884C\u6BCF\u65E5\u55AE\u6A94\u540D\u55AE\u51FA\u6A94:Run.AUTO;$(DAY_OBND_RUNNER)
#Process.DailyRunner.3.\u57F7\u884C\u6BCF\u65E5FTP\u6536\u6A94\u6392\u7A0B:Run.AUTO;$(DAY_FTP_RUNNER)
#Process.DailyRunner.4.\u57F7\u884C\u6BCF\u65E5\u672C\u5730\u6536\u6A94\u6392\u7A0B:Run.AUTO;$(DAY_RES_RUNNER)
#Process.DailyRunner.5.\u6AA2\u67E5\u7576\u65E5\u55AE\u6A94\u540D\u55AE\u51FA\u6A94\u662F\u5426\u5B8C\u6210:ConditionMatch.STB;1
# Process.DailyRunner.6.\u57F7\u884C\u4E09\u7AF9FTP\u6536\u6A94\u4F5C\u696D:Execute.CMD;$(CMD.EXEC_SSM_RES)
# Process.DailyRunner.7.\u57F7\u884C\u4E92\u52D5FTP\u6536\u6A94\u4F5C\u696D:Execute.CMD;$(CMD.EXEC_ESM_RES)

######################################################################################
# Condition definition: DailyRunner
######################################################################################
Conditions.DailyRunner.0:isTimeAfter;07:00
Conditions.DailyRunner.1:$(TRGTIME_DAY_COUNT) == $(TRGTIME_DAY_UPT_COUNT)

######################################################################################
# Variables definition: InstaRunner
######################################################################################
Variables.InstaRunner.INSTA_RUNNER:loadTaskRunner;INSTA_RUNNER#com.ibm.dpft.engine.core.taskplan.DPFTInstaFileWatcher
Variables.InstaRunner.INSTA_IBND_RUNNER:loadTaskRunner;INSTA_IBND_RUNNER#com.ibm.dpft.engine.core.taskplan.DPFTInstaDataInboundWatcher
Variables.InstaRunner.INSTA_OBND_RUNNER:loadTaskRunner;INSTA_OBND_RUNNER#com.ibm.dpft.engine.core.taskplan.DPFTInstaDataOutboundWatcher

######################################################################################
# Process definition: InstaRunner
######################################################################################
Process.InstaRunner.0.\u6BCF\u65E5\u7559\u8CC7\u540D\u55AE:ConditionMatch.STB;0
#Process.InstaRunner.1.\u555F\u52D5\u7559\u8CC7\u8655\u7406\u7A0B\u5E8F:Run.AUTO;$(INSTA_RUNNER)
#Process.InstaRunner.2.\u555F\u52D5\u7559\u8CC7\u8655\u7406Inbound\u7A0B\u5E8F:Run.AUTO;$(INSTA_IBND_RUNNER)
#Process.InstaRunner.3.\u555F\u52D5\u7559\u8CC7\u8655\u7406Outbound\u7A0B\u5E8F:Run.AUTO;$(INSTA_OBND_RUNNER)

######################################################################################
# Condition definition: InstaRunner
######################################################################################
Conditions.InstaRunner.0:isTimeAfter;07:00

######################################################################################
# Variables definition: FinishUp
######################################################################################
Variables.FinishUp.PROC_UNFIN_COUNT:loadSQL;RS.COUNT#sys#SELECT COUNT(*) AS COUNT FROM CMAUTO_AP.DPFT_AUTOMATION_PROCESS WHERE PROCESS_STATUS NOT IN ('FINISHED','ERROR')
Variables.FinishUp.ERROR_MSG:loadMessage;SYSTEM#AUTO0027E

######################################################################################
# Process definition: FinishUp
######################################################################################
Process.FinishUp.0.\u7D50\u675F\u9EDE\u521D\u59CB\u5316:ConditionMatch.STB;0
Process.FinishUp.1.\u7576\u65E5\u6392\u7A0B\u662F\u5426\u6B63\u5E38:ConditionMatch.STB;1#Y#$(ERROR_MSG)
Process.FinishUp.2.\u7D50\u675F\u7576\u65E5\u6392\u7A0B:Archive.AUTO;sys#DPFT_AUTOMATION_PROCESS#DPFT_AUTOMATION_PROC_HIS

######################################################################################
# Condition definition: FinishUp
######################################################################################
Conditions.FinishUp.0:isTimeAfter;23:00
Conditions.FinishUp.1:$(PROC_UNFIN_COUNT) == 2

######################################################################################
# Condition definition: FinishUp
######################################################################################
Conditions.DataProcess.0:isTimeAfter;00:30
